# Generated by Django 5.2.7 on 2025-10-16 03:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exams', '0001_initial'),
        ('questions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Session Code')),
                ('start_time', models.DateTimeField(verbose_name='Start Time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('total_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Total Score')),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned'), ('timeout', 'Timeout')], default='in_progress', max_length=20, verbose_name='Status')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Submitted At')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='exams.exam', verbose_name='Exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Exam Session',
                'verbose_name_plural': 'Exam Sessions',
                'db_table': 'exam_sessions',
                'ordering': ['-start_time'],
                'unique_together': {('exam', 'student')},
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Total Score')),
                ('correct_count', models.PositiveIntegerField(verbose_name='Correct Count')),
                ('wrong_count', models.PositiveIntegerField(verbose_name='Wrong Count')),
                ('submitted_at', models.DateTimeField(verbose_name='Submitted At')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('graded', 'Graded'), ('reviewed', 'Reviewed')], default='pending', max_length=20, verbose_name='Status')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Percentage')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='exams.exam', verbose_name='Exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='exam_sessions.examsession', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Exam Result',
                'verbose_name_plural': 'Exam Results',
                'db_table': 'exam_results',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actions', models.CharField(max_length=100, verbose_name='Action')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='Detail')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_logs', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='exam_sessions.examsession', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Exam Log',
                'verbose_name_plural': 'Exam Logs',
                'db_table': 'exam_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True, verbose_name='Answer Text')),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Score')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered At')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Is Correct')),
                ('exam_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='exams.examquestion', verbose_name='Exam Question')),
                ('selected_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_selections', to='questions.questionanswer', verbose_name='Selected Answer')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exam_sessions.examsession', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Student Answer',
                'verbose_name_plural': 'Student Answers',
                'db_table': 'student_answers',
                'ordering': ['exam_question__order'],
                'unique_together': {('session', 'exam_question')},
            },
        ),
    ]
